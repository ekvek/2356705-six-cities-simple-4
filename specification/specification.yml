openapi: 3.1.0
info:
  title: API сервер для демо-проекта «Шесть городов (простой)».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов (простой)».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения по аренде
      description: Создает новое предложения по аренде

      responses:
        "201":
          description: Новое предложение по аренде создано

        "400":
          description: Ошибка при создании предложения.

    get:
      tags:
        - offers
      summary: Список предложений по аренде
      description: Получает список предложений по аренде
      parameters:
        - name: limit
          in: path
          description: Ограничение на количество выводимых предложений
          schema:
            type: number

      responses:
        "200":
          description: Получены предложения по аренде отсортированные по дате публикации  (по убыванию)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offers"

  /offers/{offerId}:
    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description: Редактирует предложения по аренде

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложения по аренде

    get:
      tags:
        - offers
      summary: Детальная информация по предложению
      description: Получает детальную информацию по предложению

  /offers/{offerId}/comments:
    get:
      tags:
        - offers
      summary: Список комментариев для предложения
      description: Получает список комментариев для предложения
      parameters:
        - name: limit
          in: path
          description: Ограничение на количество выводимых комментариев
          schema:
            type: number

  /offers/{offerId}/previewImage:
    get:
      tags:
        - offers
      summary: Загрузка превью изображения
      description: Загружает превью изображения

      responses:
        "201":
          description: Превью изображения загружена.

        "401":
          description: Пользователь не авторизован.

  /comments/:
    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Добавляет комментарий для предложения

      requestBody:
        description: Информация для создания нового комментария.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/comment"
        required: true
      responses:
        "201":
          description: Комментарий добавлен.

        "400":
          description: Некорректные данные запроса.

        "401":
          description: Пользователь не авторизован.

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация нового пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Логин и пароль.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
        required: true
      responses:
        "200":
          description: Пользователь авторизован.

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      responses:
        "200":
          description: Пользователь авторизован.

        "401":
          description: Пользователь не авторизован.

  /users/avatar:
    post:
      tags:
        - users
      summary: Отправка аватарки пользователю
      description: Загружает аватарку для пользователя

      responses:
        "201":
          description: Аватарка загружена.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uploadFile"

        "401":
          description: Пользователь не авторизован.

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        type:
          type: string
          example: pro

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        email:
          type: string
          example: keks@htmlacademy.ru

    login:
      type: object

      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        password:
          type: string
          example: password

    comment:
      type: object

      properties:
        text:
          type: string
          example: Странное предложение

        offerId:
          type: string
          example: 646a76c7c0b4d0ec9275092d

        rating:
          type: string
          example: 5

    uploadFile:
      type: object

      properties:
        avatarPath:
          type: string
          example: http://localhost:3000/uploads/4EjbyOpw5y9ZcrO7L-Vfo.png

    offers:
      type: array
      anyOf:
        - items:
          type: object
          properties:
            id:
              type: string
              example: 647a92b5b73ca94b73c7e281

            title:
              type: string
              example: Годрикова впадина 2

            postDate:
              type: string
              example: 2023-06-01T08:45:40.284Z

            city:
              type: string
              example: Amsterdam

            previewImage:
              type: string
              example: dada.png

            premiumFlag:
              type: boolean
              example: false

            rating:
              type: number
              example: 4.5

            type:
              type: string
              example: apartment

            price:
              type: number
              example: 1000

            commentCount:
              type: number
              example: 0
